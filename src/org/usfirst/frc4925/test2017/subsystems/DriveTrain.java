// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4925.test2017.subsystems;

import org.usfirst.frc4925.test2017.RobotMap;
import org.usfirst.frc4925.test2017.commands.*;

import com.ctre.CANTalon;

import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.TalonSRX;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon cANTalon1 = RobotMap.driveTrainCANTalon1;
    private final CANTalon cANTalon2 = RobotMap.driveTrainCANTalon2;
    private final RobotDrive drive = RobotMap.driveTrainDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private double autoSpeed = 0.5;
public double runTimeForward = 1.0;
public double runTimeBack = 1.0;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DriveWithJoysticks());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    //drive with Joysticks
    public void driveWithJoysticks(double leftJoystick, double rightJoystick)
    {
    	drive.tankDrive(-leftJoystick, rightJoystick);
    }
    
    //drive Forward auto
    public void driveForward()
    {
    	drive.tankDrive(autoSpeed, autoSpeed);
    }
    
    //drive Back auto
    public void driveBack()
    {
    	drive.tankDrive(-autoSpeed, -autoSpeed);
    }
    
    public void stop()
    {
    	drive.tankDrive(0, 0);
    }
}

